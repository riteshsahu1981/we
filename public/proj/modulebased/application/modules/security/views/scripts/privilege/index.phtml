 <?php 

 $this->headScript()->appendFile("/js/tree/_lib/jquery.cookie.js");
 $this->headScript()->appendFile("/js/tree/_lib/jquery.hotkeys.js");
 $this->headScript()->appendFile("/js/tree/jquery.jstree.js");
 $this->headLink()->appendStylesheet('/js/tree/themes/default/style.css'); 

 //$this->headLink()->appendStylesheet('/js/tree/_docs/syntax/!style.css'); 
 //$this->headLink()->appendStylesheet('/js/tree/_docs/!style.css'); 
 ?>
<script language="javascript">


function customMenu(node) {
    
    var items = {   
        renameItem: { 
            label: "Rename",
            action: function (node) { this.rename(node);}
        },
        deleteItem: { 
            label: "Delete",
            action: function (node) {   if(this.is_selected(node)) { this.remove(); } else { this.remove(node); }  }
        },
        createItem: { 
            label: "Create",
            action: function (node) {this.create(node);}
        }
    };

    if ($(node).attr( 'rel' )=="root") {
        
        items.deleteItem._disabled = true;
        items.renameItem._disabled = true ;      
        items.createItem.label= "Create Group"; 

    }else if ($(node).attr( 'rel' )=="group") {
        
        items.createItem.label= "Create Sub Group"; 
    }
    else if ($(node).attr( 'rel' )=="subgroup") {
        items.createItem.label= "Create Role"; 
    }
    else if ($(node).attr( 'rel' )=="role") {
        delete items.createItem; 
        
    }
    else if ($(node).attr( 'rel' )=="s-group") {
        
        items.createItem.label= "Create Sub Group"; 
        items.deleteItem._disabled = true;
        items.renameItem._disabled = true ;      
    }
    else if ($(node).attr( 'rel' )=="s-subgroup") {
        items.createItem.label= "Create Role"; 
        items.deleteItem._disabled = true;
        items.renameItem._disabled = true ;      
    }
    else if ($(node).attr( 'rel' )=="s-role") {
        delete items.createItem; 
        items.deleteItem._disabled = true;
        items.renameItem._disabled = true ;      
        
    }
    else
    {
        items.createItem.label= "Create Sub Group"; 
    }

    return items;
}
 

$(function () {
	$("#privilege_tree").jstree({ 
                "core" : { "initially_open" : [ "noderoot_0" ] },

		"plugins" : [ "themes", "html_data", "ui", "crrm", "contextmenu", "types" ,"hotkeys"],
                //"plugins" : [ "themes", "html_data", "ui", "crrm", "contextmenu", "types" ],
                'contextmenu' : { 'items' : customMenu    },
                
                "types" : {
                        // I set both options to -2, as I do not need depth and children count checking
                        // Those two checks may slow jstree a lot, so use only when needed
                        "max_depth" : -2,
                        "max_children" : -2,
                        // I want only 'root' nodes to be root nodes
                        // This will prevent moving or creating any other type as a root node
                        "valid_children" : [ "root" ],
			"types" : {
				"root" : {
					"icon" : {"image" : "/js/tree/themes/default/_drive.png" },
					"valid_children" : [ "default" ],
					"max_depth" : 2,
					"hover_node" : false,
                                        'rename_node' :false,
                                        'select_node' :false
				},
                                "group" : {
                                        "icon" : {"image" : "/js/tree/themes/default/folder.png" },
					"valid_children" : [ "subgroup" ],
					"max_depth" : 2,
					"hover_node" : false					
				},
                                "subgroup" : {
					"icon" : {"image" : "/js/tree/themes/default/folder.png" },
					"valid_children" : [ "role" ],
					"max_depth" : 2,
					"hover_node" : false
				},
                                "role" : {
                                        "icon" : {"image" : "/js/tree/themes/default/file.png" },
					"max_depth" : 2,
					"hover_node" : false,
                                        "valid_children" : "none"
                                       
				},
                                "s-role" : {
                                        "icon" : {"image" : "/js/tree/themes/default/file.png" },
					"max_depth" : 2,
					"hover_node" : false,
                                        "valid_children" : "none"
                                       
				},
				"default" : {
					"icon" : {"image" : "/js/tree/themes/default/folder.png" },
					"valid_children" : [ "subgroup" ],
					"max_depth" : 2,
					"hover_node" : false
				}
			}
		}
               
	})
        .bind("create.jstree", function (e, data) {
              
		$.post(
			"/security/privilege/create", 
			{ 
                            "parent_node_id" : data.rslt.parent.attr("id"), 
                            "node_title" : data.rslt.name
			}, 
			function (r) {
				if(r.status) 
                                    $(data.rslt.obj).attr("id", r.node_id);
				else 
                                    $.jstree.rollback(data.rlbk);
				
			},"json"
		);
	})
	.bind("rename.jstree", function (e, data) {
            
		$.post(
			"/security/privilege/rename", 
			{ 
				"node_id" : data.rslt.obj.attr("id"), 
                                "node_title" : data.rslt.new_name
			}, 
			function (r) {
				if(!r.status) {
					$.jstree.rollback(data.rlbk);
				}
			},"json"
		);
	})
       .bind("remove.jstree", function (e, data) {
           
		data.rslt.obj.each(function () {                  
			$.ajax({
				async : false,
				type: 'POST',
				url: "/security/privilege/remove", 
				data : { 
					"child_node_id" : this.id,
                                        "parent_node_id" : data.rslt.parent.attr('id')
				}, 
				success : function (r) {
					if(!r.status) {
						data.inst.refresh();
					}
				}
			});
		});
	})
        ;
});

</script>
<?php $model=new Base_Security_Privilege();?>
<div id="privilege_tree" class="demo">
    <ul>
        <li id="noderoot_0" rel="root">
            <a href="#" >Privileges</a>
            <?php
            $groups=$model->getGroups();
            if(count($groups)>0){
            ?>
            <ul>
                <?php foreach($groups as $_group){?>
                <li id="<?php echo $_group->getMasterCode()."_".$_group->getMasterId()?>"  <?php if($_group->getMasterId()=="5" ){echo "rel='s-group'";}else {echo "rel='group'";} ?>><a href="#"><?php echo $_group->getMasterValue()?></a>
                    
                    <?php
                    $sub_groups=$model->getSubGroups($_group->getMasterId());
                    if(count($sub_groups)>0){
                    ?>        
                    <ul>
                        <?php foreach($sub_groups as $_sub_group){?>
                        <li id="<?php echo $_sub_group->master_code."_".$_sub_group->sub_group_id?>" <?php if($_sub_group->sub_group_id=="7" ){echo "rel='s-subgroup'";}else {echo "rel='subgroup'";} ?> ><a href="#"><?php echo $_sub_group->subgroup_title?> </a>
                            
                            <?php
                            $roles=$model->getRoles($_sub_group->sub_group_id);
                            if(count($roles)>0){
                            ?>        
                            <ul>
                                <?php foreach($roles as $_role){?>
                                <li id="<?php echo $_role->master_code."_".$_role->role_id?>"  <?php if($_role->role_id=="5" ){echo "rel='s-role'";}else {echo "rel='role'";} ?> ><a href="#"><?php echo $_role->role_title?></a>
                                </li>
                                <?php }//end of roles foreach loop ?>
                            </ul>    
                            <?php } //end of roles if?>
                        </li>
                        <?php }//end of sub-gorups foreach loop ?>
                    </ul>
                    <?php } // end of sub-group if?>        
                </li>
                <?php }//end of gorups foreach loop ?>
            </ul>
            <?php }//end of group if?>
        </li>
    </ul>
</div>



